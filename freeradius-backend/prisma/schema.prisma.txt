// freeradius-backend/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// --- (Các model nas, radacct, radcheck,... không thay đổi) ---

model nas {
  id          Int     @id @default(autoincrement())
  nasname     String  @db.VarChar(128)
  shortname   String? @db.VarChar(32)
  type        String? @default("other") @db.VarChar(30)
  ports       Int?
  secret      String  @default("secret") @db.VarChar(60)
  server      String? @db.VarChar(64)
  community   String? @db.VarChar(50)
  description String? @default("RADIUS Client") @db.VarChar(200)

  @@index([nasname], map: "nasname")
}

model nasreload {
  nasipaddress String   @id @db.VarChar(15)
  reloadtime   DateTime @db.DateTime(0)
}

model radacct {
  radacctid           BigInt    @id @default(autoincrement())
  acctsessionid       String    @default("") @db.VarChar(64)
  acctuniqueid        String    @unique(map: "acctuniqueid") @default("") @db.VarChar(32)
  username            String    @default("") @db.VarChar(64)
  realm               String?   @default("") @db.VarChar(64)
  nasipaddress        String    @default("") @db.VarChar(15)
  nasportid           String?   @db.VarChar(32)
  nasporttype         String?   @db.VarChar(32)
  acctstarttime       DateTime? @db.DateTime(0)
  acctupdatetime      DateTime? @db.DateTime(0)
  acctstoptime        DateTime? @db.DateTime(0)
  acctinterval        Int?
  acctsessiontime     Int?      @db.UnsignedInt
  acctauthentic       String?   @db.VarChar(32)
  connectinfo_start   String?   @db.VarChar(128)
  connectinfo_stop    String?   @db.VarChar(128)
  acctinputoctets     BigInt?
  acctoutputoctets    BigInt?
  calledstationid     String    @default("") @db.VarChar(50)
  callingstationid    String    @default("") @db.VarChar(50)
  acctterminatecause  String    @default("") @db.VarChar(32)
  servicetype         String?   @db.VarChar(32)
  framedprotocol      String?   @db.VarChar(32)
  framedipaddress     String    @default("") @db.VarChar(15)
  framedipv6address   String    @default("") @db.VarChar(45)
  framedipv6prefix    String    @default("") @db.VarChar(45)
  framedinterfaceid   String    @default("") @db.VarChar(44)
  delegatedipv6prefix String    @default("") @db.VarChar(45)
  class               String?   @db.VarChar(64)

  @@index([acctinterval], map: "acctinterval")
  @@index([acctsessionid], map: "acctsessionid")
  @@index([acctsessiontime], map: "acctsessiontime")
  @@index([acctstarttime], map: "acctstarttime")
  @@index([acctstoptime], map: "acctstoptime")
  @@index([class], map: "class")
  @@index([delegatedipv6prefix], map: "delegatedipv6prefix")
  @@index([framedinterfaceid], map: "framedinterfaceid")
  @@index([framedipaddress], map: "framedipaddress")
  @@index([framedipv6address], map: "framedipv6address")
  @@index([framedipv6prefix], map: "framedipv6prefix")
  @@index([nasipaddress], map: "nasipaddress")
  @@index([username], map: "username")
}

model radcheck {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  username  String @default("") @db.VarChar(64)
  attribute String @default("") @db.VarChar(64)
  op        String @default("==") @db.Char(2)
  value     String @default("") @db.VarChar(253)

  @@index([username(length: 32)], map: "username")
  @@unique([username, attribute])
}

model RadGroupCheck {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  groupname String @default("") @db.VarChar(64)
  attribute String @default("") @db.VarChar(64)
  op        String @default("==") @db.Char(2)
  value     String @default("") @db.VarChar(253)
  profile   RadiusProfile @relation("CheckAttributes", fields: [groupname], references: [name])

  @@index([groupname(length: 32)], map: "groupname")
  @@map("radgroupcheck")
}

model RadGroupReply {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  groupname String @default("") @db.VarChar(64)
  attribute String @default("") @db.VarChar(64)
  op        String @default("=") @db.Char(2)
  value     String @default("") @db.VarChar(253)
  profile   RadiusProfile @relation("ReplyAttributes", fields: [groupname], references: [name])

  @@index([groupname(length: 32)], map: "groupname")
  @@map("radgroupreply")
}

model radpostauth {
  id       Int      @id @default(autoincrement())
  username String   @default("") @db.VarChar(64)
  pass     String   @default("") @db.VarChar(64)
  reply    String   @default("") @db.VarChar(32)
  authdate DateTime @default(now()) @db.Timestamp(6)
  class    String?  @db.VarChar(64)

  @@index([class], map: "class")
  @@index([username], map: "username")
}

model radreply {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  username  String @default("") @db.VarChar(64)
  attribute String @default("") @db.VarChar(64)
  op        String @default("=") @db.Char(2)
  value     String @default("") @db.VarChar(253)

  @@index([username(length: 32)], map: "username")
}

model radusergroup {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  username  String @default("") @db.VarChar(64)
  groupname String @default("") @db.VarChar(64)
  priority  Int    @default(1)

  @@index([username(length: 32)], map: "username")
}

model Administrator {
  id             Int            @id @default(autoincrement())
  username       String         @unique
  password       String
  role           String         @default("admin")
  fullName       String?
  email          String         @unique
  phoneNumber    String?
  status         String         @default("active")
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  createdUsers   User[]         @relation("AdminCreatedUsers")
  createdBatches VoucherBatch[] @relation("AdminCreatedBatches")
}

model RadiusProfile {
  id              Int             @id @default(autoincrement())
  name            String          @unique
  description     String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  organizations   Organization[]
  checkAttributes RadGroupCheck[] @relation("CheckAttributes")
  replyAttributes RadGroupReply[] @relation("ReplyAttributes")
  VoucherPackage  VoucherPackage[]
}

model Organization {
  id                    Int           @id @default(autoincrement())
  name                  String        @unique
  login_identifier_type String        @default("manual")
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  users                 User[]
  radiusProfileId       Int
  radiusProfile         RadiusProfile @relation(fields: [radiusProfileId], references: [id])

  // --- START: เพิ่ม Field สำหรับเชื่อมกับโฆษณา ---
  advertisementId       Int?
  advertisement         Advertisement? @relation(fields: [advertisementId], references: [id], onDelete: SetNull)
  // --- END ---
}

model User {
  id             Int           @id @default(autoincrement())
  organizationId Int
  username       String        @unique
  password       String
  full_name      String
  national_id    String?       @unique
  employee_id    String?       @unique
  student_id     String?       @unique
  status         String        @default("active")
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  organization   Organization  @relation(fields: [organizationId], references: [id])
  createdById    Int?
  createdBy      Administrator? @relation("AdminCreatedUsers", fields: [createdById], references: [id])
  email          String?       @unique
  phoneNumber    String?

  @@index([organizationId], map: "User_organizationId_fkey")
}

model RadiusAttributeDefinition {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  type        String
  createdAt   DateTime @default(now())
}

model Setting {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  value     String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VoucherPackage {
  id              Int           @id @default(autoincrement())
  name            String        @unique
  durationDays    Int
  price           Float?
  radiusProfileId Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  radiusProfile   RadiusProfile @relation(fields: [radiusProfileId], references: [id])
}

model VoucherBatch {
  id              Int           @id @default(autoincrement())
  batchIdentifier String        @unique
  createdAt       DateTime      @default(now())
  quantity        Int
  packageName     String
  usernamePrefix  String
  passwordType    String
  usersJson       String        @db.Text
  createdById     Int
  createdBy       Administrator @relation("AdminCreatedBatches", fields: [createdById], references: [id])
}

// --- START: เพิ่ม Model ใหม่สำหรับโฆษณา ---
model Advertisement {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  type        String   // Template A or B
  imageUrl    String?
  videoUrl    String?
  headerText  String?
  bodyText    String?  @db.Text
  buttonText  String   @default("Continue to Internet")
  buttonUrl   String   @default("https://www.ntplc.co.th")
  countdown   Int?     @default(5)
  status      String   @default("active")
  createdAt   DateTime @default(now())

  organizations Organization[]
}
// --- END ---